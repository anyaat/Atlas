
.ui.small.dividing.violet.header = translate('cms.forms.event.timing')

= f.input :recurrence, collection: Event.recurrences.map { |k, v| [translate_enum_value(Event, :recurrence, k), k] }, input_html: { data: { category: 'dropin course' } }

.two.fields
  = f.input :start_date, as: :string, wrapper: :semantic_date, wrapper_html: { class: 'start' }
  = f.input :end_date, as: :string, wrapper: :semantic_date, wrapper_html: { class: 'end' }, input_html: { placeholder: translate('cms.hints.never') }

.two.fields
  = f.input :start_time, wrapper_html: { class: 'start' }, input_html: { type: 'time', autocomplete: 'off' }
  = f.input :end_time, wrapper_html: { class: 'end' }, input_html: { type: 'time', autocomplete: 'off', placeholder: translate('cms.hints.unspecified') }

.ui.small.dividing.violet.header = translate('cms.forms.event.registration')

.hint = translate('cms.hints.event.registration_mode', native: translate_enum_value(@record, :registration_mode, :native))
.hint = translate('cms.hints.event.registration_url', native: translate_enum_value(@record, :registration_mode, :native))
.fields
  = f.input :registration_mode, collection: Event.registration_modes.map { |k, v| [translate_enum_value(Event, :registration_mode, k), k] }, wrapper_html: { class: 'sixteen wide' }
  = f.input :registration_url, as: :url, wrapper_html: { class: 'twelve wide', style: 'display: none' }
= help_link :registration
br
