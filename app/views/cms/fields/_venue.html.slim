
= f.input :published

.required.field
  = f.label :address
  .fields
    .sixteen.wide.field
      = f.input :name, label: false, placeholder: translate_attribute(Venue, :name)
  .fields
    .eleven.wide.field
      = f.input :street, label: false, placeholder: translate_attribute(Venue, :street)
    .five.wide.field
      = f.input :city, label: false, placeholder: translate_attribute(Venue, :city)
  .fields
    .six.wide.field
      - if f.object.province.present?
        = f.hidden_field :province_code
        = f.input_field :province, value: f.object.province_name, disabled: true
      - else
        - api_url = cms_manager_provinces_url(current_user, country_code: f.object.country_code, area: @context.is_a?(LocalArea), format: :json)
        = f.input_field :province_code, collection: [f.object.province_name], data: { url: api_url, prompt: translate('cms.hints.province.prompt') }, class: 'ajax search'
    .seven.wide.field
      - if f.object.country_code.present?
        = f.hidden_field :country_code
        = f.input_field :country, as: :string, value: f.object.country.label, disabled: true
      - else
        - api_url = cms_manager_countries_url(current_user, area: @context.is_a?(LocalArea), format: :json)
        = f.input_field :country_code, collection: [f.object.country_name], data: { url: api_url, prompt: translate_attribute(Venue, :country_code) }, class: 'ajax search'
    .three.wide.field
      = f.input :postcode, label: false, placeholder: translate_attribute(Venue, :postcode)

#venue-map data-editable='true'
.ui.map.message class="#{'hidden' if f.object.coordinates?}"
  .header = translate('cms.hints.venue.marker_not_set.title')
  p = translate('cms.hints.venue.marker_not_set.description')
.ui.negative.map.message.for-failure class='hidden'
  .header = translate('cms.hints.venue.cant_find_address.title')
  p = translate('cms.hints.venue.cant_find_address.description')
.ui.info.map.message.for-success class="#{'hidden' unless f.object.coordinates?}"
  .header = translate('cms.hints.venue.marker_set.title')
  p = translate('cms.hints.venue.marker_set.description')

button.lookup.ui.fluid.button type='button'
  i.search.icon
  = translate('cms.hints.venue.find_marker')

- has_location_error = f.object.errors.include?(:latitude) || f.object.errors.include?(:longitude)
.ui.accordion
  .title class=('active' if has_location_error)
    i.dropdown.icon
    = translate('cms.hints.venue.manual_location')
  .content class=('active' if has_location_error)
    .required.field
      = f.hint translate('cms.hints.venue.location')
      = f.label :coordinates, required: true
      - if current_user.administrator?
        .three.fields
          .field = f.input :latitude, label: false, placeholder: translate_attribute(Venue, :latitude)
          .field = f.input :longitude, label: false, placeholder: translate_attribute(Venue, :longitude)
          .field = f.input :place_id, label: false, placeholder: translate_attribute(Venue, :place_id)
      - else
        .two.fields
          .field = f.input :latitude, label: false, placeholder: translate_attribute(Venue, :latitude)
          .field = f.input :longitude, label: false, placeholder: translate_attribute(Venue, :longitude)
          = f.hidden_field :place_id, placeholder: translate_attribute(Venue, :place_id)
