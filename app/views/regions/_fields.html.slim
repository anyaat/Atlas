
- restrictions = Region.restrictions.map { |k, v| [translate(k, scope: :restriction), k] }
- countries = I18nData.countries(I18n.locale).map { |k,v| [v, k] }

= f.error :base

= f.input :name
= f.input :identifier
= f.input :country_code, collection: countries, prompt: 'Country', class: 'search'
= f.input :subnational

.field
  = f.label :location
  .two.fields
    .field
      = f.input_field :latitude, placeholder: 'Latitude'
    .field
      = f.input_field :longitude, placeholder: 'Longitude'

.field
  = f.label :restriction
  .two.fields
    .field
      = f.input_field :radius, placeholder: 'Radius (km)', max: 10
    .field
      = f.input_field :restriction, collection: restrictions
