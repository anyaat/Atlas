
- content_for :title, @province.province_name

.ui.segment
  h2.ui.header
    = floating_action 'Delete', 'trash', regions_province_path(@province), data: { method: 'DELETE', confirm: translate('messages.confirm_delete_region') }
    .content = @province.province_name
    .sub.header = Regions::Country.get_name @province.country_code

  i.calendar.icon
  = pluralize @province.events.count, 'Event'
  br
  i.marker.icon
  = pluralize @province.venues.count, 'Venue'

.ui.segment
  h3.ui.header Managers for this province / state / county

  - if @province.managers.present?
    .ui.list
      = render collection: @province.managers, partial: 'managers/manager', cache: true
  - else
    | No managers have been set for this region yet.

  - if @province.country.managers.present?
    h4.ui.header Managers for all of #{@province.country.name}
    .ui.list
      = render collection: @province.country.managers, partial: 'managers/manager', cache: true

.ui.segment
  h3.ui.header
    = floating_action 'Create Area', 'plus', new_regions_province_local_area_path(@province)
    .content Local Areas

  - if @province.local_areas.present?
    .ui.list
      = render @province.local_areas, cache: true
  - else
    | No local areas are currently being tracked for this region

p
  a.ui.basic.button href=url_for(@province.country)
    i.left.arrow.icon
    | Back to #{@province.country.name}
