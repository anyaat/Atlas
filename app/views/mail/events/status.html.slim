ruby:
  timestamp = @event.send({
    created: :created_at,
    needs_review: :updated_at,
    needs_urgent_review: :expires_at,
    expired: :expired_at,
    finished: :end_date
  }[@status])

.box
  h2
    = translate(@status, scope: 'mail.event.status.title')
    small = @event.custom_name || @event.venue.street

= email_status_icon(@status)

p.byline
  = translate(@status, scope: 'mail.event.status.byline', date: timestamp.to_date.to_s(:long))

table.event
  tr
    th = translate('mail.event.location')
    td = @event.address
  tr
    th = translate('mail.event.timing')
    td
      = @event.recurrence_in_words
      ' , 
      = @event.formatted_start_end_time
  - if @status == :created
    tr
      th = translate('mail.event.start_date')
      td = @event.start_date.to_date.to_s(:long)
  tr
    th = translate('mail.event.category')
    td = @event.category_name
  tr
    th = translate('mail.event.manager')
    td
      - manager = @event.manager
      = mail_to manager.email, manager.name
  - if @status == :created
    tr
      th = translate('mail.event.created_by')
      td
        - creator = @event.audits.last.user
        = creator ? mail_to(creator.email, creator.name) : "System"
  - elsif %i[needs_urgent_review expired].include?(@status)
    tr
      th = translate('mail.event.updated_at')
      td = @event.updated_at.to_date.to_s(:long)

p.explanation
  = translate(@status, scope: 'mail.event.status.explanation')

.actions
  - unless %i[expired finished].include?(@status)
    a.button href=map_event_url(@event)
      span = translate('mail.event.view')
  a.button href=email_login(map_event_url(@event))
    span = translate(@status == :created ? 'edit' : 'update', scope: 'mail.event')
