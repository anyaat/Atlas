class ApplicationInstance{constructor(){this.container=document.getElementById("map"),this.listingType=document.body.dataset.list,this.mode="map",this.listPanel=new ListPanel(document.getElementById("js-list-panel")),this.infoPanel=new InfoPanel(document.getElementById("js-info-panel")),this.navbar=new Navbar(document.getElementById("js-navbar")),this.imageGallery=new ImageGallery(document.getElementById("js-image-gallery")),this.timingCarousel=new TimingCarousel(document.getElementById("js-timing-carousel")),this.listToggle=new ListToggle(document.getElementById("js-list-toggle")),this.share=new SharingModal(document.getElementById("js-share")),this.atlas=new AtlasAPI(this.container.dataset.api);document.querySelectorAll("input, textarea").forEach((e=>{e.addEventListener("focus",(()=>window.scrollBy(0,0)))}))}loadMap(){const e=JSON.parse(this.container.dataset.state);if(this.map=new MapView(this.container,e.venue),e.event)this.showEvent(e.event,e.venue);else if(e.venue)this.showVenue(e.venue);else{const e=this.map.isZoomWide();this._setMode(e?"map":"list")}this.currentMapOverview=null}showVenues(e,t=!1){if(e.length)this.listPanel.showVenues(e);else if(t){const e=this.map.getCenter();this.atlas.getClosestVenue(e,(t=>{this.listPanel.showClosestVenue(t,e)}))}}showOnlineEvents(e){this.listPanel.showOnlineEvents(e)}showEvent(e,t){this.currentVenue&&this.currentVenue.id!=e.venueId&&(this.currentVenue=null),this.saveMapState(),this._setMode("event"),this.infoPanel.show(e,t),t&&(this.showVenues([t]),this.map.setHighlightedVenue(t)),this.infoPanel.hideMessages(),this.saveHistoryState(`/map/event/${e.id}`,t)}showVenue(e){"online"==this.listingType&&(this.map.updateRenderedVenues(),this._setListingType("offline"),this.listPanel.selectType("offline")),e.events.length>1?(this.saveMapState(),this._setMode("venue"),this.navbar.setVenue(e),this.showVenues([e]),this.map.invalidateSize(),this.map.setHighlightedVenue(e),this.infoPanel.hideMessages(),this.saveHistoryState(`/map/venue/${e.id}`,e),this.currentVenue=e):this.showEvent(e.events[0],e)}showMap(){this._setMode("list"),this.map.setHighlightedVenue(null),this.currentMapOverview?this.map.flyTo(this.currentMapOverview.center,this.currentMapOverview.zoom):this.map.zoomOut(),this.updateMode(),this.saveHistoryState("/map"),this.currentVenue=null,this.currentMapOverview=null}updateMode(){"list"!=this.mode&&"map"!=this.mode||this._setMode(this.map.isZoomWide()?"map":"list")}saveMapState(){if("map"==this.mode||"list"==this.mode){const e=this.map.mapbox.getCenter();this.currentMapOverview={center:{latitude:e.lat,longitude:e.lng},zoom:this.map.mapbox.getZoom()}}}back(){"event"==this.mode&&this.currentVenue?this.showVenue(this.currentVenue):this.showMap()}saveHistoryState(e,t=null){let s={};-1==e.indexOf("#")&&(t?e+=`#${this.map.highlightZoom}/${t.latitude}/${t.longitude}`:window.location.hash&&(e+=window.location.hash)),this.currentVenue&&(s.venue=this.currentVenue),this.currentMapOverview&&(s.overview=this.currentMapOverview),history.replaceState(s,void 0,e)}_setListingType(e){this.listingType!=e&&(this.listingType=e,document.body.dataset.list=e,this.map.updateRenderedVenues())}_setMode(e){this.mode!=e&&(this.mode&&document.body.classList.remove(`mode--${this.mode}`),this.mode=e,this.mode&&(document.body.classList.add(`mode--${this.mode}`),document.body.scrollTop=0),this.map.invalidateSize())}}document.addEventListener("DOMContentLoaded",(()=>{window.Application=new ApplicationInstance,window.Application.loadMap()}));